
To create a sample baseimage, example of a c program..


Create hello.c :

//#include <unistd.h>
#include <sys/syscall.h>

#ifndef DOCKER_IMAGE
    #define DOCKER_IMAGE "hello-world"
#endif

#ifndef DOCKER_GREETING
    #define DOCKER_GREETING "Hello from Scratch"
#endif

const char message[] =
    "\n"
    DOCKER_GREETING "\n"
    "\n"
    "(ref: https://docs.docker.com/engine/userguide/eng-image/baseimages/#create-a-simple-parent-image-using-scratch)\n";

void _start() {
    //write(1, message, sizeof(message) - 1);
    syscall(SYS_write, 1, message, sizeof(message) - 1);

    //_exit(0);
    syscall(SYS_exit, 0);
}


Compile:

$ sudo yum install -y gcc glibc-static

$ gcc -o hello -static -nostartfiles hello.c




Create Dockerfile :

FROM scratch
COPY hello /
CMD ["/hello"]



Build image:

$ docker build --tag hello . 



Test:
$ docker run -it --rm hello:latest

Hello from Scratch

(ref: https://docs.docker.com/engine/userguide/eng-image/baseimages/#create-a-simple-parent-image-using-scratch)

